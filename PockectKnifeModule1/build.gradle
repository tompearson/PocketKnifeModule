apply plugin: 'com.android.application' // comment out after testing as application
//apply plugin: 'com.android.library' // set to library before sending to repository
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.tompearson'

android {
    signingConfigs {
        config {
            storeFile file('kotlin.jks')
            storePassword 'oscardog'
            keyAlias = 'pocketknife'
            keyPassword 'oscardog'
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.example.pocketknifemodule1" // comment out after testing as application
        minSdkVersion 16
        targetSdkVersion 29
//        versionCode 1
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // Ready to load keys from app level folder in file store.properties
        // Note: google_maps_key is the same value as places_api_key
        def storeKeysFile = file('store.properties')
        Properties storeProps = new Properties()
        def google_maps_key_ = ""
        def places_api_key_ = ""
        if (storeKeysFile.canRead()) {
            // Load keys (this file is intentionally out of the project space
            storeProps.load(new FileInputStream(storeKeysFile))
            google_maps_key_ = storeProps['google_maps_key'].toString()
            places_api_key_ = storeProps['places_api_key'].toString()
        } else {
            throw new GradleException("Could not read storeKeysFile.properties!")
        }
//          resValue "string", "google_maps_key", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "") TPD look at this for future
        manifestPlaceholders = [
                                google_maps_key  : "${google_maps_key_}",
                                places_api_key   : "${places_api_key_}"]
        buildConfigField "String", "google_maps_key", "\"${google_maps_key_}\""
        buildConfigField "String", "places_api_key", "\"${places_api_key_}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.config
        }
        debug {
            debuggable true
        }
    }
  }

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation('com.microsoft.appcenter:espresso-test-extension:1.4')
    testImplementation 'junit:junit:4.13'
    implementation 'com.github.quickpermissions:quickpermissions-kotlin:0.4.0'

//    App Center
    def appCenterSdkVersion = '2.5.1'
    implementation "com.microsoft.appcenter:appcenter-analytics:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-crashes:${appCenterSdkVersion}"
    implementation "com.microsoft.appcenter:appcenter-distribute:${appCenterSdkVersion}"
//    Maps feature
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.3.0'


}
